
aflTopDir = '../../../afl'
aflSrcDir = '../../../afl/src/afl'
afgTopDir = '../..'

env = Environment( CPPPATH = [ afgTopDir+'/include', aflTopDir+'/include' ] )

debug = ARGUMENTS.get('debug', 0)
if int(debug):
	env.Append( CCFLAGS = '-Wall -g -DDEBUG -std=c++0x' )
	outputDir = 'output_dbg'
else:
	env.Append( CCFLAGS = '-Wall -O2 -std=c++0x' )
	outputDir = 'output_opt'

aflOutDir = outputDir + '/afl'

VariantDir( aflOutDir, aflSrcDir, duplicate=0 )
VariantDir( outputDir, '.', duplicate=0 )

#aflSrcs = [ aflOutDir+'/time.cpp' ]

#env.Program( outputDir + '/t_.cpp' )

env.Program( outputDir + '/t_basics.cpp' )

env.Program( outputDir + '/t_graph_intf.cpp' )

env.Program( outputDir + '/t_graph.cpp' )

env.Program( outputDir + '/t_graph_input.cpp' )

env.Program( outputDir + '/t_graph_convert.cpp' )

env.Program( outputDir + '/t_graph_gen.cpp' )

env.Program( outputDir + '/t_path.cpp' )

env.Program( outputDir + '/t_graph_alg.cpp' )

env.Program( outputDir + '/t_shortest_path.cpp' )

env.Program( outputDir + '/t_export_gdl.cpp' )

env.Program( outputDir + '/t_kthsp.cpp' )

env.Program( outputDir + '/t_tree.cpp' )

env.Program( outputDir + '/t_tree_util.cpp' )

env.Program( outputDir + '/t_tree_alg.cpp' )

env.Program( outputDir + '/t_tree_dfs.cpp' )
